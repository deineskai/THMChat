@startuml
class de.thm.chat.Main {
    s : BasicTHMChatServer
    ch : de.thm.chat.CommandHandler
    in : Scanner
    running : boolean
    void main()
}
class de.thm.chat.CommandHandler {
    - s : BasicTHMChatServer
    - user : String 
    - pwd : String
    - broadcast : ArrayList
    - running : boolean
    + de.thm.chat.CommandHandler(server: BasicTHMChatServer)
    + execute(command: String): boolean
    + isRunning(): boolean 
    + getBroadcast(name: String): String
    + getUser(name: String): String
    - printMsg (m: String)
    - isBroadcast(name: String): boolean
    - isUser(name: String): boolean
    - credentialsOK(): boolean
}
class InfoCode {
    + print()
    + print(user-or-broadcast: String)
    + print(username: String, broadcast: String)
}
abstract class  de.thm.chat.msg.Msg  {
    # s : BasicTHMChatServer
    # r : de.thm.chat.receiver.Receiver
    # user : String
    # pwd : String
    + de.thm.chat.msg.Msg(s: BasicTHMChatServer, r: de.thm.chat.receiver.Receiver, user: String, pwd: String)
}
class de.thm.chat.msg.TextMsg {
    - content: String
    + de.thm.chat.msg.TextMsg(s: BasicTHMChatServer, r: de.thm.chat.receiver.Receiver, user: String, pwd: String, content: String)
    + send()
} 
de.thm.chat.msg.Msg <|-- de.thm.chat.msg.TextMsg
class de.thm.chat.msg.ImageMsg  {
    - image: InputStream
    - mime: String
    + de.thm.chat.msg.ImageMsg(s: BasicTHMChatServer, r: de.thm.chat.receiver.Receiver, user: String, pwd: String, path: String)
    + send()
}
de.thm.chat.msg.Msg <|-- de.thm.chat.msg.ImageMsg
abstract class de.thm.chat.receiver.Receiver {
    - name: String
    + de.thm.chat.receiver.Receiver(name: String)
    + getName(): String
}
class de.thm.chat.receiver.Broadcast {
    - users: ArrayList
    + de.thm.chat.receiver.Broadcast(name: String)
    + add(u: Users)
    + rem(name: String)
}
de.thm.chat.receiver.Receiver <|-- de.thm.chat.receiver.Broadcast
class de.thm.chat.receiver.User {
    + de.thm.chat.receiver.User(name: String)
}
de.thm.chat.receiver.Receiver <|-- de.thm.chat.receiver.User
enum ANSCIColors {
    - ansiCode: String
    + get(): String
    AnnsiColors(ansiCode: String)
}
de.thm.chat.Main .. de.thm.chat.CommandHandler: starts
de.thm.chat.CommandHandler .. de.thm.chat.receiver.Broadcast: creates new
de.thm.chat.CommandHandler .. de.thm.chat.msg.TextMsg: creates new to send
de.thm.chat.CommandHandler .. de.thm.chat.msg.ImageMsg: creates new to send
@enduml